<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="de.tastaturathlet.document.repository.DocumentRepositoryTest" time="6.77" tests="5" errors="0" skipped="0" failures="0">
  <properties>
    <property name="gopherProxySet" value="false"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/mikeremde/athlet/learn-githubactions/target/test-classes:/Users/mikeremde/athlet/learn-githubactions/target/classes:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.6.7/spring-boot-starter-data-jpa-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.6.7/spring-boot-starter-aop-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-aop/5.3.19/spring-aop-5.3.19.jar:/Users/mikeremde/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.6.7/spring-boot-starter-jdbc-2.6.7.jar:/Users/mikeremde/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-jdbc/5.3.19/spring-jdbc-5.3.19.jar:/Users/mikeremde/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/mikeremde/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/mikeremde/.m2/repository/org/hibernate/hibernate-core/5.6.8.Final/hibernate-core-5.6.8.Final.jar:/Users/mikeremde/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/mikeremde/.m2/repository/net/bytebuddy/byte-buddy/1.11.22/byte-buddy-1.11.22.jar:/Users/mikeremde/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/mikeremde/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/Users/mikeremde/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/mikeremde/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/mikeremde/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.6/jaxb-runtime-2.3.6.jar:/Users/mikeremde/.m2/repository/org/glassfish/jaxb/txw2/2.3.6/txw2-2.3.6.jar:/Users/mikeremde/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/mikeremde/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-jpa/2.6.4/spring-data-jpa-2.6.4.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-commons/2.6.4/spring-data-commons-2.6.4.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-orm/5.3.19/spring-orm-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-context/5.3.19/spring-context-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-tx/5.3.19/spring-tx-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-beans/5.3.19/spring-beans-5.3.19.jar:/Users/mikeremde/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-aspects/5.3.19/spring-aspects-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-data-jdbc/2.6.7/spring-boot-starter-data-jdbc-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-jdbc/2.3.4/spring-data-jdbc-2.3.4.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-relational/2.3.4/spring-data-relational-2.3.4.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.6.7/spring-boot-starter-web-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter/2.6.7/spring-boot-starter-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot/2.6.7/spring-boot-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.6.7/spring-boot-autoconfigure-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.6.7/spring-boot-starter-logging-2.6.7.jar:/Users/mikeremde/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar:/Users/mikeremde/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar:/Users/mikeremde/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/mikeremde/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/mikeremde/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/mikeremde/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/mikeremde/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.6.7/spring-boot-starter-json-2.6.7.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.2.1/jackson-databind-2.13.2.1.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.2/jackson-datatype-jdk8-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.2/jackson-datatype-jsr310-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.2/jackson-module-parameter-names-2.13.2.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.6.7/spring-boot-starter-tomcat-2.6.7.jar:/Users/mikeremde/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.62/tomcat-embed-core-9.0.62.jar:/Users/mikeremde/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.62/tomcat-embed-el-9.0.62.jar:/Users/mikeremde/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.62/tomcat-embed-websocket-9.0.62.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-web/5.3.19/spring-web-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-webmvc/5.3.19/spring-webmvc-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-expression/5.3.19/spring-expression-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.6.7/spring-boot-starter-actuator-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.6.7/spring-boot-actuator-autoconfigure-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-actuator/2.6.7/spring-boot-actuator-2.6.7.jar:/Users/mikeremde/.m2/repository/io/micrometer/micrometer-core/1.8.5/micrometer-core-1.8.5.jar:/Users/mikeremde/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/mikeremde/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/mikeremde/.m2/repository/org/projectlombok/lombok/1.18.24/lombok-1.18.24.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.6.7/spring-boot-starter-test-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-test/2.6.7/spring-boot-test-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.6.7/spring-boot-test-autoconfigure-2.6.7.jar:/Users/mikeremde/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/Users/mikeremde/.m2/repository/net/minidev/json-smart/2.4.8/json-smart-2.4.8.jar:/Users/mikeremde/.m2/repository/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8.jar:/Users/mikeremde/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/mikeremde/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/mikeremde/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/mikeremde/.m2/repository/org/assertj/assertj-core/3.21.0/assertj-core-3.21.0.jar:/Users/mikeremde/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/mikeremde/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/mikeremde/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/mikeremde/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/mikeremde/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:/Users/mikeremde/.m2/repository/org/mockito/mockito-core/4.0.0/mockito-core-4.0.0.jar:/Users/mikeremde/.m2/repository/net/bytebuddy/byte-buddy-agent/1.11.22/byte-buddy-agent-1.11.22.jar:/Users/mikeremde/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/Users/mikeremde/.m2/repository/org/mockito/mockito-junit-jupiter/4.0.0/mockito-junit-jupiter-4.0.0.jar:/Users/mikeremde/.m2/repository/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/Users/mikeremde/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-core/5.3.19/spring-core-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-jcl/5.3.19/spring-jcl-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-test/5.3.19/spring-test-5.3.19.jar:/Users/mikeremde/.m2/repository/org/xmlunit/xmlunit-core/2.8.4/xmlunit-core-2.8.4.jar:/Users/mikeremde/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="DE"/>
    <property name="sun.boot.library.path" value="/Users/mikeremde/.sdkman/candidates/java/11.0.15-tem/lib"/>
    <property name="sun.java.command" value="/Users/mikeremde/athlet/learn-githubactions/target/surefire/surefirebooter616271282053437849.jar /Users/mikeremde/athlet/learn-githubactions/target/surefire 2022-07-22T10-38-33_996-jvmRun1 surefire15108564239873173088tmp surefire_015544345736992312699tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/mikeremde/athlet/learn-githubactions/target/test-classes:/Users/mikeremde/athlet/learn-githubactions/target/classes:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.6.7/spring-boot-starter-data-jpa-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.6.7/spring-boot-starter-aop-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-aop/5.3.19/spring-aop-5.3.19.jar:/Users/mikeremde/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.6.7/spring-boot-starter-jdbc-2.6.7.jar:/Users/mikeremde/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-jdbc/5.3.19/spring-jdbc-5.3.19.jar:/Users/mikeremde/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/mikeremde/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/mikeremde/.m2/repository/org/hibernate/hibernate-core/5.6.8.Final/hibernate-core-5.6.8.Final.jar:/Users/mikeremde/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/mikeremde/.m2/repository/net/bytebuddy/byte-buddy/1.11.22/byte-buddy-1.11.22.jar:/Users/mikeremde/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/mikeremde/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/Users/mikeremde/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/mikeremde/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/mikeremde/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.6/jaxb-runtime-2.3.6.jar:/Users/mikeremde/.m2/repository/org/glassfish/jaxb/txw2/2.3.6/txw2-2.3.6.jar:/Users/mikeremde/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/mikeremde/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-jpa/2.6.4/spring-data-jpa-2.6.4.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-commons/2.6.4/spring-data-commons-2.6.4.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-orm/5.3.19/spring-orm-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-context/5.3.19/spring-context-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-tx/5.3.19/spring-tx-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-beans/5.3.19/spring-beans-5.3.19.jar:/Users/mikeremde/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-aspects/5.3.19/spring-aspects-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-data-jdbc/2.6.7/spring-boot-starter-data-jdbc-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-jdbc/2.3.4/spring-data-jdbc-2.3.4.jar:/Users/mikeremde/.m2/repository/org/springframework/data/spring-data-relational/2.3.4/spring-data-relational-2.3.4.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.6.7/spring-boot-starter-web-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter/2.6.7/spring-boot-starter-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot/2.6.7/spring-boot-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.6.7/spring-boot-autoconfigure-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.6.7/spring-boot-starter-logging-2.6.7.jar:/Users/mikeremde/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar:/Users/mikeremde/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar:/Users/mikeremde/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/mikeremde/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/mikeremde/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/mikeremde/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/mikeremde/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.6.7/spring-boot-starter-json-2.6.7.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.2.1/jackson-databind-2.13.2.1.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.2/jackson-annotations-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.2/jackson-core-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.2/jackson-datatype-jdk8-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.2/jackson-datatype-jsr310-2.13.2.jar:/Users/mikeremde/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.2/jackson-module-parameter-names-2.13.2.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.6.7/spring-boot-starter-tomcat-2.6.7.jar:/Users/mikeremde/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.62/tomcat-embed-core-9.0.62.jar:/Users/mikeremde/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.62/tomcat-embed-el-9.0.62.jar:/Users/mikeremde/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.62/tomcat-embed-websocket-9.0.62.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-web/5.3.19/spring-web-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-webmvc/5.3.19/spring-webmvc-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-expression/5.3.19/spring-expression-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.6.7/spring-boot-starter-actuator-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.6.7/spring-boot-actuator-autoconfigure-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-actuator/2.6.7/spring-boot-actuator-2.6.7.jar:/Users/mikeremde/.m2/repository/io/micrometer/micrometer-core/1.8.5/micrometer-core-1.8.5.jar:/Users/mikeremde/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/mikeremde/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/mikeremde/.m2/repository/org/projectlombok/lombok/1.18.24/lombok-1.18.24.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.6.7/spring-boot-starter-test-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-test/2.6.7/spring-boot-test-2.6.7.jar:/Users/mikeremde/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.6.7/spring-boot-test-autoconfigure-2.6.7.jar:/Users/mikeremde/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/Users/mikeremde/.m2/repository/net/minidev/json-smart/2.4.8/json-smart-2.4.8.jar:/Users/mikeremde/.m2/repository/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8.jar:/Users/mikeremde/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/mikeremde/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/mikeremde/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/mikeremde/.m2/repository/org/assertj/assertj-core/3.21.0/assertj-core-3.21.0.jar:/Users/mikeremde/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/mikeremde/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/mikeremde/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/mikeremde/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/mikeremde/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/mikeremde/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:/Users/mikeremde/.m2/repository/org/mockito/mockito-core/4.0.0/mockito-core-4.0.0.jar:/Users/mikeremde/.m2/repository/net/bytebuddy/byte-buddy-agent/1.11.22/byte-buddy-agent-1.11.22.jar:/Users/mikeremde/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/Users/mikeremde/.m2/repository/org/mockito/mockito-junit-jupiter/4.0.0/mockito-junit-jupiter-4.0.0.jar:/Users/mikeremde/.m2/repository/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/Users/mikeremde/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-core/5.3.19/spring-core-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-jcl/5.3.19/spring-jcl-5.3.19.jar:/Users/mikeremde/.m2/repository/org/springframework/spring-test/5.3.19/spring-test-5.3.19.jar:/Users/mikeremde/.m2/repository/org/xmlunit/xmlunit-core/2.8.4/xmlunit-core-2.8.4.jar:/Users/mikeremde/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/mikeremde"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-04-19"/>
    <property name="java.home" value="/Users/mikeremde/.sdkman/candidates/java/11.0.15-tem"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/mikeremde/athlet/learn-githubactions"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/mikeremde/athlet/learn-githubactions/target/surefire/surefirebooter616271282053437849.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="11.0.15+10"/>
    <property name="user.name" value="mikeremde"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="12.4"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="spring.beaninfo.ignore" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-11.0.15+10"/>
    <property name="localRepository" value="/Users/mikeremde/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/g1/5rtgj__917lfnstym_ww97dr0000gn/T/"/>
    <property name="java.version" value="11.0.15"/>
    <property name="user.dir" value="/Users/mikeremde/athlet/learn-githubactions"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="3807"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.library.path" value="/Users/mikeremde/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="11.0.15+10"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="55.0"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
  </properties>
  <testcase name="findAllDocument" classname="de.tastaturathlet.document.repository.DocumentRepositoryTest" time="0.145">
    <system-out><![CDATA[10:38:34.535 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
10:38:34.540 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
10:38:34.559 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [de.tastaturathlet.document.repository.DocumentRepositoryTest] from class [org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper]
10:38:34.570 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [de.tastaturathlet.document.repository.DocumentRepositoryTest]: class path resource [de/tastaturathlet/document/repository/DocumentRepositoryTest-context.xml] does not exist
10:38:34.570 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [de.tastaturathlet.document.repository.DocumentRepositoryTest]: class path resource [de/tastaturathlet/document/repository/DocumentRepositoryTestContext.groovy] does not exist
10:38:34.570 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [de.tastaturathlet.document.repository.DocumentRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
10:38:34.601 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [de.tastaturathlet.document.repository.DocumentRepositoryTest]
10:38:34.605 [main] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - @TestExecutionListeners is not present for class [de.tastaturathlet.document.repository.DocumentRepositoryTest]: using defaults.
10:38:34.605 [main] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
10:38:34.615 [main] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3bcbb589, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3b00856b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3016fd5e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@35d08e6c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@53d102a2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6c45ee6e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b3e12b5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5aac4250, org.springframework.test.context.event.EventPublishingTestExecutionListener@1338fb5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@42463763, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@59f63e24, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@61f05988, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7ca33c24, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@fade1fc, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@67c2e933]
10:38:34.617 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.6.7)

2022-07-22 10:38:39.863  INFO 3807 --- [           main] d.t.d.repository.DocumentRepositoryTest  : Starting DocumentRepositoryTest using Java 11.0.15 on Mikes-MacBook-Pro.local with PID 3807 (started by mikeremde in /Users/mikeremde/athlet/learn-githubactions)
2022-07-22 10:38:39.863  INFO 3807 --- [           main] d.t.d.repository.DocumentRepositoryTest  : No active profile set, falling back to 1 default profile: "default"
2022-07-22 10:38:40.003  INFO 3807 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-22 10:38:40.004  INFO 3807 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-07-22 10:38:40.032  INFO 3807 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24 ms. Found 1 JPA repository interfaces.
2022-07-22 10:38:40.085  INFO 3807 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2022-07-22 10:38:40.179  INFO 3807 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:fb6cf6b1-8aac-421c-beb4-05a420740480;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2022-07-22 10:38:40.357  INFO 3807 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-07-22 10:38:40.384  INFO 3807 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.8.Final
2022-07-22 10:38:40.469  INFO 3807 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-07-22 10:38:40.531  INFO 3807 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-07-22 10:38:40.801  INFO 3807 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-07-22 10:38:40.805  INFO 3807 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-07-22 10:38:41.072  INFO 3807 --- [           main] d.t.d.repository.DocumentRepositoryTest  : Started DocumentRepositoryTest in 6.432 seconds (JVM running for 6.9)
2022-07-22 10:38:41.085  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@1782896, testMethod = findAllDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@30333941]; rollback [true]
2022-07-22 10:38:41.220  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@1782896, testMethod = findAllDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  </testcase>
  <testcase name="deleteDocument" classname="de.tastaturathlet.document.repository.DocumentRepositoryTest" time="0.01">
    <system-out><![CDATA[2022-07-22 10:38:41.225  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@5e02fb23, testMethod = deleteDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@30333941]; rollback [true]
2022-07-22 10:38:41.234  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@5e02fb23, testMethod = deleteDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  </testcase>
  <testcase name="findDocument" classname="de.tastaturathlet.document.repository.DocumentRepositoryTest" time="0.008">
    <system-out><![CDATA[2022-07-22 10:38:41.236  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@30811f91, testMethod = findDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@30333941]; rollback [true]
2022-07-22 10:38:41.242  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@30811f91, testMethod = findDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  </testcase>
  <testcase name="updateDocument" classname="de.tastaturathlet.document.repository.DocumentRepositoryTest" time="0.011">
    <system-out><![CDATA[2022-07-22 10:38:41.244  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@70a54731, testMethod = updateDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@30333941]; rollback [true]
2022-07-22 10:38:41.253  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@70a54731, testMethod = updateDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  </testcase>
  <testcase name="createDocument" classname="de.tastaturathlet.document.repository.DocumentRepositoryTest" time="0.006">
    <system-out><![CDATA[2022-07-22 10:38:41.256  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@6be1f37f, testMethod = createDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@30333941]; rollback [true]
2022-07-22 10:38:41.261  INFO 3807 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@47f4e407 testClass = DocumentRepositoryTest, testInstance = de.tastaturathlet.document.repository.DocumentRepositoryTest@6be1f37f, testMethod = createDocument@DocumentRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d1dee39 testClass = DocumentRepositoryTest, locations = '{}', classes = '{class de.tastaturathlet.document.config.JpaAuditingConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48d5f34e key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages={}, value={"de.tastaturathlet.document.domain"}, basePackageClasses={}), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters={}, enableDefaultTransactions=true, repositoryBaseClass=org.springframework.data.repository.config.DefaultRepositoryBaseClass.class, basePackageClasses={}, escapeCharacter='\', includeFilters={}, bootstrapMode=DEFAULT, repositoryFactoryBeanClass=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class, entityManagerFactoryRef="entityManagerFactory", queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation="", transactionManagerRef="transactionManager", repositoryImplementationPostfix="Impl", basePackages={"de.tastaturathlet.document.*"}, considerNestedRepositories=false, value={}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.database", skip=NO), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, loader=org.springframework.test.context.ContextLoader.class, initializers={}, classes={de.tastaturathlet.document.config.JpaAuditingConfig.class}, name="", locations={}, value={}, inheritLocations=true), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, useDefaultFilters=true, excludeFilters={}, showSql=true, excludeAutoConfiguration={}, includeFilters={}, properties={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a62b5bc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@53fd0d10, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d320340e, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3549bca9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74bada02, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3fcb9f70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6aa3a905, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  </testcase>
</testsuite>